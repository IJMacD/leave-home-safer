{"version":3,"sources":["Decoder.js","App.js","reportWebVitals.js","index.js"],"names":["Decoder","data","b64","substr","payload","JSON","parse","atob","nameZh","metadata","nameEn","type","hash","nameZH","utf8","decode","App","useState","result","setResult","scanning","setScanning","facingMode","setFacingMode","className","style","display","flexDirection","delay","onError","console","log","onScan","onClick","text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAEzBC,GADWD,EAAKE,OAAO,EAAG,IACpBF,EAAKE,OAAO,KAClBC,EAAUC,KAAKC,MAAMC,KAAKL,IAEdM,GAA+BJ,EAAzCK,SAAyCL,EAA/BI,QAAQE,EAAuBN,EAAvBM,OAAQC,EAAeP,EAAfO,KAAMC,EAASR,EAATQ,KAElCC,EAASC,IAAKC,OAAOP,GAE3B,OACI,+BACI,8CACA,6BAAME,IACN,8CACA,6BAAMG,IACN,sCACA,6BAAMF,IACN,sCACA,6BAAMC,O,MCoBHI,MAnCf,WAAgB,IAAD,EACiBC,mBAAS,MAD1B,mBACLC,EADK,KACGC,EADH,OAEqBF,oBAAS,GAF9B,mBAELG,EAFK,KAEKC,EAFL,OAGyBJ,mBAAS,QAHlC,mBAGLK,EAHK,KAGOC,EAHP,KAiBb,OACE,sBAAKC,UAAU,MAAf,UACIJ,GAAY,sBAAKK,MAAO,CAAEC,QAAS,OAAQC,cAAe,UAA9C,UACV,cAAC,IAAD,CACEC,MAAO,IACPC,QAASC,QAAQC,IACjBC,OAlBV,SAAiBd,GACXA,IACFC,EAAUD,GACVG,GAAY,KAgBNC,WAAYA,IAEd,wBAAQW,QAAS,kBAAMV,EAA6B,UAAfD,EAAyB,OAAS,UAAvE,4BAGFJ,GAAU,cAAClB,EAAD,CAASC,KAAMiB,EAAOgB,QAC/Bd,GAAY,wBAAQa,QAlB3B,WACEd,EAAU,MACVE,GAAY,IAgBK,4BCvBNc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f5b439e3.chunk.js","sourcesContent":["import utf8 from 'utf8';\r\n\r\nexport default function Decoder ({ data }) {\r\n    const preamble = data.substr(0, 14);\r\n    const b64 = data.substr(14);\r\n    const payload = JSON.parse(atob(b64));\r\n\r\n    const { metadata, nameZh, nameEn, type, hash } = payload;\r\n\r\n    const nameZH = utf8.decode(nameZh);\r\n\r\n    return (\r\n        <dl>\r\n            <dt>English Name</dt>\r\n            <dd>{ nameEn }</dd>\r\n            <dt>Chinese Name</dt>\r\n            <dd>{ nameZH }</dd>\r\n            <dt>Type</dt>\r\n            <dd>{ type }</dd>\r\n            <dt>Hash</dt>\r\n            <dd>{ hash }</dd>\r\n        </dl>\r\n    );\r\n}","import  { useState } from 'react';\nimport QrReader from 'react-qr-scanner';\nimport Decoder from './Decoder';\nimport './App.css';\n\nfunction App() {\n  const [ result, setResult ] = useState(null);\n  const [ scanning, setScanning ] = useState(true);\n  const [ facingMode, setFacingMode ] = useState(\"rear\");\n\n  function onScan (result) {\n    if (result) {\n      setResult(result);\n      setScanning(false);\n    }\n  }\n\n  function onReset () {\n    setResult(null);\n    setScanning(true);\n  }\n\n  return (\n    <div className=\"App\">\n      { scanning && <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <QrReader\n            delay={100}\n            onError={console.log}\n            onScan={onScan}\n            facingMode={facingMode}\n          />\n          <button onClick={() => setFacingMode(facingMode === \"front\" ? \"rear\" : \"front\")}>Flip Camera</button>\n        </div>\n      }\n      { result && <Decoder data={result.text} /> }\n      { !scanning && <button onClick={onReset}>Scan Again</button> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}